" DESCRIPTION:
" A simple vim configuration for work across multiple environments where
" a plugin ecosystem or standard IDE may not be present.
" Should be compatible with any UNIXy platform with a vim version > 7. 
" Typically used for server configuration and management.
"
" This configuration was previously setup to include key plugins via Pathogen. 
" My approach to Vim on my workstation has evolved, and neovim configured with
" LazyVim (https://www.youtube.com/watch?v=N93cTbtLCIM) is now my preferred
" approach. 
"
" PRO TIP:
" Get the most out of VIM. Remap your CAPSLOCK to CTRL.
" Details - http://www.danielmiessler.com/blog/enhancements-to-shell-and-vim-productivity#capslock
" CAPSLOCK to CTRL is configured in System Settings, not Vim.

" ------------------------
" BASELINE SETTINGS
" ------------------------

" Configure default file encoding
set fileencodings=ucs-bom,utf-8,latin1

" Don't wake up system with blinking cursor
let &guicursor = &guicursor . ",a:blinkon0"

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
    syntax on
    set hlsearch
endif

" Don't write swapfile on most commonly used directories for NFS mounts or USB sticks
autocmd BufNewFile,BufReadPre /media/*,/mnt/* set directory=~/tmp,/var/tmp,/tmp

" Sanity checks: make Vim perform more like a modern editor
set nocompatible " Ensure that we're running in Vi Improved mode.
set ruler " Show the cursor position all the time
set number " Show line numbers in left gutter
set viminfo='20,\"50 " read/write a .viminfo file, don't store more than 50 lines of registers
set nowrap " Do not visually line-wrap text
set backspace=2 " Backspaces over indent, eol, and start
set history=100 " Keep the last 100 commands. Vim default is 20, vi default is 0, and RHEL system default is 50.
set autoindent " Will autoindent the next line
set ignorecase " Allow case insensitive searching. Use \c to make search case sensitive again.

" Tab management
set expandtab " Use spaces instead of tab characters
set tabstop=4 " Set number of columns a tab will cover visually
set softtabstop=4 " Set number of columns for tab when in insert mode
set shiftwidth=4 " Set number of columns < or > will indent text

" ------------------------
" EDITOR SHORTCUTS
" ------------------------

" A better leader: ',' is more efficient and ergonomic than ':'
let mapleader = ","

" Map 'jk' to the ESC command.
imap jk <ESC>

" Shortcut to forcibly save file with ,w
map <leader>w :w!<cr>

" Shortcut to forcibly exit file w/out saving
map <leader>q :q!<cr>

" Toggle spellcheck
map <leader>s :set spell!<cr>

" Toggle search highlight
map <leader>h :set hlsearch!<cr>

" Toggle paste mode
map <leader>pa :set paste!<cr>

" Toggle number gutter
map <leader>li :set number!<cr>

" Shorcut to fix spelling
map <leader>f 1z=

" Trick for easily repeating task
" in vertical-block mode using '.'
map . :norm.<CR>

" Easily reload VIM configuration
map <leader>rc :so ~/.vimrc<CR>

" Search bar from insert mode
imap <C-f> <ESC>/

" Jump into bash shell
map <leader>sh :shell<CR>

" ------------------------
" Window Management
" ------------------------

" New windows open below or to the right
set splitbelow
set splitright

" Navigate Vim windows with
" just CTRL + direction key
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Easily reposition windows 
map <leader>Wl <C-w>L " Move window far right
map <leader>Wh <C-w>H " Move window far left 
map <leader>Wj <C-w>J " Move window to bottom
map <leader>Wk <C-w>K " Move window to top
map <leader>Wr <C-w>R " Rotate window UP or LEFT

" Quickly resize splits
map <silent> <Leader>+ :exe "resize " . (winheight(0) * 3/2)<CR>
map <silent> <Leader>- :exe "resize " . (winheight(0) * 2/3)<CR>
